# coding: utf-8

"""
    Content Management

    The content management feed allows you to process content for items in bulk. You can take in content via the content feeds. Use the XSDs to manage content.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class FeedRecordResponseResultsItem(BaseModel):
    # A unique ID used for tracking the Feed File
    feed_id: typing.Optional[str] = Field(None, alias='feedId')

    # The source of the feed
    feed_source: typing.Optional[str] = Field(None, alias='feedSource')

    # The feed type
    feed_type: typing.Optional[str] = Field(None, alias='feedType')

    # The seller ID
    partner_id: typing.Optional[str] = Field(None, alias='partnerId')

    # The number of items received
    items_received: typing.Optional[int] = Field(None, alias='itemsReceived')

    # The number of items in the feed that have successfully processed
    items_succeeded: typing.Optional[int] = Field(None, alias='itemsSucceeded')

    # The number of items in the feed that failed due to a data or system error
    items_failed: typing.Optional[int] = Field(None, alias='itemsFailed')

    # The number of items in the feed that are still in progress
    items_processing: typing.Optional[int] = Field(None, alias='itemsProcessing')

    # Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR. For details, see the definitions listed under 'Feed Statuses' at the beginning of this section.
    feed_status: typing.Optional[str] = Field(None, alias='feedStatus')

    # The date and time the feed was submitted. Format: yyyymmddThh:mm:ss.xxxz
    feed_date: typing.Optional[datetime] = Field(None, alias='feedDate')

    # The batch ID for the feed, if provided
    batch_id: typing.Optional[str] = Field(None, alias='batchId')

    # The most recent time the feed was modified. Format: yyyymmddThh:mm:ss.xxxz
    modified_dtm: typing.Optional[datetime] = Field(None, alias='modifiedDtm')
    class Config:
        arbitrary_types_allowed = True
