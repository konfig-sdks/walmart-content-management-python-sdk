# coding: utf-8

"""
    Content Management

    The content management feed allows you to process content for items in bulk. You can take in content via the content feeds. Use the XSDs to manage content.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from walmart_content_management_python_sdk.pydantic.feeds_get_feed_status_response_errors import FeedsGetFeedStatusResponseErrors
from walmart_content_management_python_sdk.pydantic.feeds_get_feed_status_response_ingestion_errors import FeedsGetFeedStatusResponseIngestionErrors
from walmart_content_management_python_sdk.pydantic.feeds_get_feed_status_response_item_details import FeedsGetFeedStatusResponseItemDetails

class FeedsGetFeedStatusResponse(BaseModel):
    errors: typing.Optional[FeedsGetFeedStatusResponseErrors] = Field(None, alias='errors')

    # A unique ID used for tracking the Feed File
    feed_id: typing.Optional[str] = Field(None, alias='feedId')

    # Can be one of the following: RECEIVED, INPROGRESS, PROCESSED, or ERROR
    feed_status: typing.Optional[Literal["RECEIVED", "INPROGRESS", "PROCESSED", "ERROR"]] = Field(None, alias='feedStatus')

    ingestion_errors: typing.Optional[FeedsGetFeedStatusResponseIngestionErrors] = Field(None, alias='ingestionErrors')

    # The number of items received in the feed
    items_received: typing.Optional[int] = Field(None, alias='itemsReceived')

    # The number of items in the feed that processed successfully
    items_succeeded: typing.Optional[int] = Field(None, alias='itemsSucceeded')

    # The number of items in the feed that failed due to a data or system error
    items_failed: typing.Optional[int] = Field(None, alias='itemsFailed')

    # The number of items in the feed that are still processing
    items_processing: typing.Optional[int] = Field(None, alias='itemsProcessing')

    # The object response to the starting number, where 0 is the first entity available for request
    offset: typing.Optional[int] = Field(None, alias='offset')

    # The number of items returned. Cannot be greater than 1000.
    limit: typing.Optional[int] = Field(None, alias='limit')

    item_details: typing.Optional[FeedsGetFeedStatusResponseItemDetails] = Field(None, alias='itemDetails')
    class Config:
        arbitrary_types_allowed = True
